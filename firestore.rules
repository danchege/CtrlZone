rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function hasAdminClaim() {
      return request.auth.token.admin == true;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && (isOwner(userId) || hasAdminClaim());
      allow delete: if isSignedIn() && hasAdminClaim();
    }
    
    // Games collection
    match /games/{gameId} {
      allow read: if true;
      allow write: if isSignedIn() && hasAdminClaim();
    }
    
    // Tournaments collection
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if isSignedIn() && hasAdminClaim();
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (request.auth.uid == resource.data.userId || hasAdminClaim());
    }
    
    // Contacts collection
    match /contacts/{messageId} {
      allow read: if isSignedIn() && hasAdminClaim();
      allow create: if true;
      allow update, delete: if isSignedIn() && hasAdminClaim();
    }
    
    // Settings collection
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isSignedIn() && hasAdminClaim();
    }
  }
}